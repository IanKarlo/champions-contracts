--- Quantidade de jogadores------
DECLARE
    quantidade number;
BEGIN
    SELECT COUNT(NICKNAME) INTO quantidade
    from JOGADOR;
    dbms_output.put_line('Quantidade: '||quantidade);
END;
--------------------------------

-- Colocar os personagens defensivos e seus atributos---
SELECT P.NOME, P.HP, P.ATAQUE, P.PODER, P.ARMADURA, P.V_ATAQUE, P.V_MOVIMENTO, D.RESISTENCIA
FROM PERSONAGEM P INNER JOIN DEFENSIVO D
    ON P.NOME = D.NOME;
----------------

--GET BESTEST MVP OF ALL TIME
SELECT ID, NICKNAME, KDA
FROM     (
        SELECT ID, NICKNAME, S_KILL/S_DEATH + S_ASSIST AS KDA
        FROM(
                SELECT     ID, NICKNAME, SUM(KILL) AS S_KILL, SUM(DEATH) AS S_DEATH, SUM(ASSIST) AS S_ASSIST
                FROM    PARTICIPA
                WHERE     KILL IS NOT NULL AND DEATH IS NOT NULL AND ASSIST IS NOT NULL
                GROUP BY (ID, NICKNAME)
            )
        )
WHERE KDA = (
                SELECT MAX(KDA)
                FROM(
                        SELECT ID, NICKNAME, S_KILL/S_DEATH + S_ASSIST AS KDA
                        FROM(
                                SELECT     ID, NICKNAME, SUM(KILL) AS S_KILL, SUM(DEATH) AS S_DEATH, SUM(ASSIST) AS S_ASSIST
                                FROM    PARTICIPA
                                WHERE     KILL IS NOT NULL AND DEATH IS NOT NULL AND ASSIST IS NOT NULL
                                GROUP BY (ID, NICKNAME)
                            )
                    )
            );
------------------------

--- Media de kill por ordem----
SELECT NICKNAME, AVG(KILL) MEDIA_KILL FROM PARTICIPA
    GROUP BY NICKNAME
    ORDER BY MEDIA_KILL DESC;
-------------------------

-- CONSULTA DE TODOS JOGADORES E SUAS EVENTUAIS PARTIDAS JOGADAS 
SELECT J.ID, J.NICKNAME, COUNT(P.CODIGO)
FROM JOGADOR J LEFT OUTER JOIN PARTICIPA P ON P.NICKNAME = J.NICKNAME AND J.ID = P.ID
GROUP BY (J.ID, J.NICKNAME)
ORDER BY J.ID, J.NICKNAME;
--------------

-- CONSULTA DOS JOGADORES QUE POSSUEM O ITEM MENOS OBTIDO
SELECT ID,NICKNAME,RANK
FROM JOGADOR J
WHERE (J.ID,J.NICKNAME)
IN (
    SELECT O.ID,O.NICK FROM OBTEVE O
    WHERE O.NOME =
        (
        SELECT NOME FROM
            (
            SELECT NOME,COUNT(*) FROM OBTEVE
            GROUP BY NOME
            ORDER BY COUNT(*) ASC
            FETCH FIRST 1 ROW ONLY
            )
        )
    )
---------------------

-- CONSULTA DOS JOGADORES QUE NÃO POSSUEM O PERSONAGEM MAIS OBTIDO
SELECT ID, NICKNAME, RANK
FROM JOGADOR J
WHERE (J.ID,J.NICKNAME)
NOT IN
    (
    SELECT P.ID,P.NICK
    FROM POSSUI P
    WHERE P.NOME =
        (
        SELECT NOME FROM
            (
            SELECT NOME, COUNT(*)
            FROM POSSUI
            GROUP BY NOME
            ORDER BY COUNT(*) DESC
            FETCH FIRST 1 ROW ONLY
            )
        )
    )
---------------------

-- CONSULTA O JOGADOR COM O MAIOR NUMERO DE VITÓRIAS
SELECT ID,NICKNAME,COUNT(TIME_V) AS VITORIAS
FROM
    (
    SELECT A.ID,A.NICKNAME,A.TIME,A.CODIGO,B.TIME_V
    FROM PARTICIPA A INNER JOIN PARTIDA B
    ON A.CODIGO = B.CODIGO
    )
WHERE TIME = TIME_V
GROUP BY (ID,NICKNAME)
ORDER BY COUNT(TIME_V) DESC
FETCH FIRST 1 ROW ONLY
-------------

--- MOSTRA O KDA ABSOLUTO DE CADA JOGADOR
SELECT ID, NICKNAME, KDA(S_KILL,S_ASSIST,S_DEATH)
FROM
    (
    SELECT     ID, NICKNAME, SUM(KILL) AS S_KILL, SUM(DEATH) AS S_DEATH, SUM(ASSIST) AS S_ASSIST
    FROM    PARTICIPA
    WHERE     KILL IS NOT NULL AND DEATH IS NOT NULL AND ASSIST IS NOT NULL
    GROUP BY (ID, NICKNAME)
    )
ORDER BY KDA(S_KILL,S_ASSIST,S_DEATH) DESC
FETCH FIRST 1 ROW ONLY
---------------------------

--- MOSTRA OS JOGADORES QUE A MÉDIA DE KDA É MAIOR DO QUE A MÉDIA DE TODOS
SELECT P.ID,p.nickname, AVG(KDA(P.KILL,P.ASSIST,P.DEATH)) AS kdaMed
FROM PARTICIPA P
GROUP BY P.ID,p.nickname
HAVING AVG
    (
    KDA(P.KILL,P.ASSIST,P.DEATH)) > (Select AVG (KDA(P2.KILL,P2.ASSIST,P2.DEATH)) FROM PARTICIPA P2)
order BY AVG(KDA(P.KILL,P.ASSIST,P.DEATH)) DESC
-----------------------

-- Contar quantos buffs cada item tem
SELECT   nome, COUNT(descricao) AS 'Qtd de buffs'
FROM  buffs
GROUP BY nome ORDER BY nome;
--------